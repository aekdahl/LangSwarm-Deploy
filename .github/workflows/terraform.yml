name: Terraform Infrastructure and Deployment

on:
  push:
    tags:
      - "v*"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.5

    - name: Authenticate with GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Initialize Terraform
      working-directory: terraform/infrastructure
      run: terraform init

    # Untaint the Resource (if needed)
    - name: Untaint iamcredentials.googleapis.com
      run: |
        terraform state list | grep "google_project_service.required_apis\[\"iamcredentials.googleapis.com\"\]" && \
        terraform untaint google_project_service.required_apis["iamcredentials.googleapis.com"] || echo "Resource not tainted"

    - name: Apply Terraform Plan
      working-directory: terraform/infrastructure
      run: terraform apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=europe-west1"
          
    - name: Authenticate Docker with Artifact Registry
      run: |
        gcloud auth configure-docker europe-west1-docker.pkg.dev

    - name: Build and Push Backend Docker Image
      run: |
        docker build -t europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/langswarm/langswarm-backend:latest .
        docker push europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/langswarm/langswarm-backend:latest

    - name: Build and Push Frontend Docker Image
      run: |
        cd frontend
        docker build -t europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/langswarm/langswarm-frontend:latest .
        docker push europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/langswarm/langswarm-frontend:latest

    - name: Initialize Terraform
      working-directory: terraform/serverless
      run: terraform init
      
    - name: Apply Terraform Plan
      working-directory: terraform/serverless
      run: terraform apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=europe-west1"
